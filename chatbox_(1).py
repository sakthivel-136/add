# -*- coding: utf-8 -*-
"""Chatbox (1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bUkjKaFWMUne9uR6LLaTOwdANNnxruhA
"""

import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder
from sklearn.feature_extraction.text import TfidfVectorizer # Import TfidfVectorizer

ques=pd.read_csv('kcet.csv')
ques.head()

ques.isnull().sum()

ques.dropna(inplace=True)

from sklearn.linear_model import LogisticRegression # Import LogisticRegression

from sklearn.preprocessing import LabelEncoder

le=LabelEncoder()
ques['Answer']=le.fit_transform(ques['Answer'])

vectorizer = TfidfVectorizer()
a = vectorizer.fit_transform(ques['Question'])
b=ques['Answer']
LO=LogisticRegression()
LO.fit(a,b)

qu=input("Enter your question: ")
# Remove the line below
# el1=le.transform([qu])
# print(el1)
po=vectorizer.transform([qu])
ans=LO.predict(po)
# You may want to inverse transform the predicted answer back to its original string form
predicted_answer_label = ans[0] # Get the predicted integer label
# Find the original string answer corresponding to this label
original_answer = le.inverse_transform([predicted_answer_label])
print("Predicted answer label:", predicted_answer_label)
print("Predicted answer:", original_answer[0])